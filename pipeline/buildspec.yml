#
# buildspec.yml
#

version: 0.2

env:
  variables:
    deploy_bucket: libra-lambda-deployable

phases:
  install:
    runtime-versions:
      golang: 1.x
#    commands:

  pre_build:
    commands:
      - BUILD_VERSION=$(date --date="@$(echo ${CODEBUILD_START_TIME} | cut -c1-10)" +"%Y%m%d%H%M%S")
      - COMMIT_TAG=gitcommit-${CODEBUILD_RESOLVED_SOURCE_VERSION}

  build:
    commands:
      #
      # build the assets
      #
      - cd ${CODEBUILD_SRC_DIR}/libra-audit
      - make linux
      - cd ${CODEBUILD_SRC_DIR}/libra-audit-query
      - make linux
      - cd ${CODEBUILD_SRC_DIR}/libra-doi
      - make linux
      - cd ${CODEBUILD_SRC_DIR}/libra-event-audit
      - make linux
      - cd ${CODEBUILD_SRC_DIR}/libra-index
      - make linux
      - cd ${CODEBUILD_SRC_DIR}/libra-index-delete
      - make linux
      - cd ${CODEBUILD_SRC_DIR}/libra-ingest
      - make linux
      - cd ${CODEBUILD_SRC_DIR}/libra-mailer
      - make linux
      - cd ${CODEBUILD_SRC_DIR}/libra-orcid
      - make linux
      - cd ${CODEBUILD_SRC_DIR}/libra-schedule
      - make linux
      - cd ${CODEBUILD_SRC_DIR}/libra-sis-notify
      - make linux
      - cd ${CODEBUILD_SRC_DIR}/libra-virgo
      - make linux
      - cd ${CODEBUILD_SRC_DIR}/libra-virgo-delete
      - make linux
      #
      # copy to the results bucket
      #
      #
      # libra-audit function plus migrations
      - aws s3 cp ${CODEBUILD_SRC_DIR}/libra-audit/bin/deployment.zip s3://${deploy_bucket}/${BUILD_VERSION}/libra-audit/deployment.zip --quiet
      - aws s3 cp ${CODEBUILD_SRC_DIR}/libra-audit/migrations s3://${deploy_bucket}/${BUILD_VERSION}/libra-audit/migrations --recursive --include *.sql --quiet
      #
      # libra-audit-query function
      - aws s3 cp ${CODEBUILD_SRC_DIR}/libra-audit-query/bin/deployment.zip s3://${deploy_bucket}/${BUILD_VERSION}/libra-audit-query/deployment.zip --quiet
      #
      # libra-doi function
      - aws s3 cp ${CODEBUILD_SRC_DIR}/libra-doi/bin/deployment.zip s3://${deploy_bucket}/${BUILD_VERSION}/libra-doi/deployment.zip --quiet
      #
      # libra-event-audit function
      - aws s3 cp ${CODEBUILD_SRC_DIR}/libra-event-audit/bin/deployment.zip s3://${deploy_bucket}/${BUILD_VERSION}/libra-event-audit/deployment.zip --quiet
      #
      # libra-index function
      - aws s3 cp ${CODEBUILD_SRC_DIR}/libra-index/bin/deployment.zip s3://${deploy_bucket}/${BUILD_VERSION}/libra-index/deployment.zip --quiet
      #
      # libra-index-delete function
      - aws s3 cp ${CODEBUILD_SRC_DIR}/libra-index-delete/bin/deployment.zip s3://${deploy_bucket}/${BUILD_VERSION}/libra-index-delete/deployment.zip --quiet
      #
      # libra-ingest function
      - aws s3 cp ${CODEBUILD_SRC_DIR}/libra-ingest/bin/deployment.zip s3://${deploy_bucket}/${BUILD_VERSION}/libra-ingest/deployment.zip --quiet
      #
      # libra-mailer function
      - aws s3 cp ${CODEBUILD_SRC_DIR}/libra-mailer/bin/deployment.zip s3://${deploy_bucket}/${BUILD_VERSION}/libra-mailer/deployment.zip --quiet
      #
      # libra-orcid function
      - aws s3 cp ${CODEBUILD_SRC_DIR}/libra-orcid/bin/deployment.zip s3://${deploy_bucket}/${BUILD_VERSION}/libra-orcid/deployment.zip --quiet
      #
      # libra-schedule function
      - aws s3 cp ${CODEBUILD_SRC_DIR}/libra-schedule/bin/deployment.zip s3://${deploy_bucket}/${BUILD_VERSION}/libra-schedule/deployment.zip --quiet
      #
      # libra-sis-notify function
      - aws s3 cp ${CODEBUILD_SRC_DIR}/libra-sis-notify/bin/deployment.zip s3://${deploy_bucket}/${BUILD_VERSION}/libra-sis-notify/deployment.zip --quiet
      #
      # libra-virgo function
      - aws s3 cp ${CODEBUILD_SRC_DIR}/libra-virgo/bin/deployment.zip s3://${deploy_bucket}/${BUILD_VERSION}/libra-virgo/deployment.zip --quiet
      #
      # libra-virgo-delete function
      - aws s3 cp ${CODEBUILD_SRC_DIR}/libra-virgo-delete/bin/deployment.zip s3://${deploy_bucket}/${BUILD_VERSION}/libra-virgo-delete/deployment.zip --quiet
      #
      # scripts
      - aws s3 cp ${CODEBUILD_SRC_DIR}/scripts s3://${deploy_bucket}/${BUILD_VERSION}/scripts --recursive --include *.ksh --quiet
      #
      # create the git commit tag file
      #
      - touch ${CODEBUILD_SRC_DIR}/${COMMIT_TAG}.git
      - aws s3 cp ${CODEBUILD_SRC_DIR}/${COMMIT_TAG}.git s3://${deploy_bucket}/${BUILD_VERSION}/${COMMIT_TAG}.git --quiet
      #
      # make the latest folder
      #
      - aws s3 sync s3://${deploy_bucket}/${BUILD_VERSION} s3://${deploy_bucket}/latest --delete --quiet
      #
      # update the latest tag
      #
      - aws --region=$AWS_REGION ssm put-parameter --name /lambdas/${deploy_bucket}/latest --value ${BUILD_VERSION} --type String --overwrite

#  post_build:
#    commands:

#
# end of file
#
